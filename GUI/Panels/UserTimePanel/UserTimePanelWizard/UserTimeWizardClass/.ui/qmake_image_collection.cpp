/****************************************************************************
** Image collection for project 'usertime'.
**
** Generated from reading image files: 
**      images/run.png
**      images/pause.png
**      images/terminate.png
**      images/interrupt.png
**      images/cont.png
**      images/update.png
**      images/detach.png
**      images/attach.png
**      images/rightarrow.png
**      images/leftarrow.png
**
** Created: Mon Apr 19 09:36:32 2004
**      by: The User Interface Compiler ($Id$)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include <qimage.h>
#include <qdict.h>
#include <qmime.h>
#include <qdragobject.h>

// images/run.png
static const unsigned char image_0_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x00,0x02,0x07,0x20,0x4e,0x00,
    0xe2,0x00,0x20,0xf6,0x60,0x60,0xf8,0x7f,0x84,0x81,0xa1,0x81,0x09,0x88,
    0x19,0xa1,0x98,0x09,0x22,0x06,0x92,0x03,0xab,0x49,0x80,0xea,0x01,0x02,
    0x00,0x0b,0xc9,0x07,0xfd
};

static const QRgb image_0_ctable[] = {
    0xffffffff,0xff000000
};

// images/pause.png
static const unsigned char image_1_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x60,0x60,0x60,0x61,0x63,0x60,
    0x60,0x03,0x62,0x56,0x20,0x66,0x69,0x63,0x60,0xf8,0xe3,0xc6,0xc0,0xd0,
    0xa0,0x06,0xc4,0x62,0x50,0xac,0x06,0x11,0x03,0xc9,0xb1,0x42,0xd5,0x82,
    0xf4,0x80,0x00,0x00,0xd4,0xf0,0x06,0x53
};

static const QRgb image_1_ctable[] = {
    0xffffffff,0xff000000
};

// images/terminate.png
static const unsigned char image_2_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x60,0x60,0x90,0x90,0x60,0x60,
    0xe0,0x31,0x80,0x60,0xb6,0x04,0x20,0x76,0x60,0x60,0x60,0x3e,0x00,0xc4,
    0x0d,0x0c,0x0c,0x8c,0x0d,0x10,0x9a,0x09,0xc8,0x67,0x03,0x62,0x9e,0x04,
    0x08,0x96,0x00,0xaa,0x05,0x01,0x00,0xbd,0x40,0x06,0x47
};

static const QRgb image_2_ctable[] = {
    0xffffffff,0xff000000
};

// images/interrupt.png
static const unsigned char image_3_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x60,0x60,0x60,0x3e,0x80,0x89,
    0x19,0x1b,0xb0,0x63,0x10,0x40,0x66,0x03,0x00,0x23,0x63,0x07,0xd8
};

static const QRgb image_3_ctable[] = {
    0xffffffff,0xff000000
};

// images/cont.png
static const unsigned char image_4_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x60,0x60,0x38,0xd0,0x00,0xc4,
    0x07,0x80,0x78,0x01,0x10,0x4f,0x60,0x60,0xb8,0xdf,0xc1,0xc0,0x70,0x81,
    0x05,0x88,0x99,0xa0,0x98,0x05,0x22,0x06,0x92,0x03,0xab,0x39,0x00,0xd1,
    0x03,0x02,0x00,0x3b,0x96,0x10,0xfb
};

static const QRgb image_4_ctable[] = {
    0xffffffff,0xff000000
};

// images/update.png
static const unsigned char image_5_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x60,0x60,0x60,0x01,0x62,0x2e,
    0x20,0x16,0x04,0x62,0x85,0x26,0x06,0x06,0x07,0x37,0x20,0xad,0xc5,0xc0,
    0x20,0x20,0xc4,0xc0,0xc0,0xc1,0x04,0x94,0x07,0x62,0x26,0x20,0x66,0x84,
    0xd2,0x20,0x3e,0xff,0x3f,0x06,0x30,0x00,0x00,0x55,0xfa,0x02,0xe2
};

static const QRgb image_5_ctable[] = {
    0xffffffff,0xff000000
};

// images/detach.png
static const unsigned char image_6_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x80,0x02,0x19,0x06,0x06,0xc6,
    0xff,0x0c,0x0c,0xcc,0x8f,0x19,0x18,0xf8,0x19,0x81,0x5c,0x66,0x06,0x06,
    0x89,0x00,0x06,0x06,0x03,0xa0,0x54,0xd2,0x0a,0x06,0x86,0x04,0x05,0x06,
    0x86,0x44,0x0d,0x20,0xdd,0x01,0xc4,0x4e,0x0c,0x0c,0x9a,0x16,0x0c,0x0c,
    0x16,0x0d,0x0c,0x0c,0x00,0xcc,0xc0,0x07,0x80
};

static const QRgb image_6_ctable[] = {
    0xffffffff,0xff000000
};

// images/attach.png
static const unsigned char image_7_data[] = {
    0x00,0x00,0x00,0x40,0x78,0x9c,0x63,0x60,0x80,0x82,0x0f,0x0c,0x0c,0x8c,
    0x33,0x18,0x18,0x98,0x38,0x80,0x98,0x05,0x81,0xd9,0x80,0x7c,0x76,0xa0,
    0x34,0xcf,0x01,0x06,0x06,0x09,0x20,0x6d,0x00,0xc4,0x0a,0x0c,0x08,0x00,
    0x00,0x72,0x24,0x02,0xef
};

static const QRgb image_7_ctable[] = {
    0xffffffff,0xff000000
};

// images/rightarrow.png
static const unsigned char image_8_data[] = {
    0x00,0x00,0x04,0x00,0x78,0x9c,0xfb,0xff,0x9f,0xf6,0x80,0x81,0x81,0x81,
    0x62,0xfd,0x94,0x98,0x01,0xd3,0x4b,0xae,0x19,0xc8,0xfa,0xd0,0xcd,0x80,
    0xb9,0x8d,0x10,0x26,0xd6,0x3c,0x52,0xdd,0x44,0x69,0xb8,0x0c,0x94,0x7e,
    0x64,0xf7,0x53,0x12,0x7e,0xa4,0xd8,0x45,0x8e,0x5e,0x74,0xb7,0x92,0x03,
    0xa8,0x95,0x7e,0x69,0x01,0x00,0x17,0x8a,0x78,0xb2
};

// images/leftarrow.png
static const unsigned char image_9_data[] = {
    0x00,0x00,0x04,0x00,0x78,0x9c,0xfb,0xff,0x9f,0x36,0x80,0x81,0x81,0x81,
    0x22,0xbd,0xe4,0xea,0x87,0xe9,0x23,0x47,0x3f,0xb2,0x1e,0x52,0xf5,0xa3,
    0xab,0x87,0xf9,0x81,0x10,0x26,0xd7,0xad,0xc8,0x76,0x90,0x0b,0xa8,0xa1,
    0x1f,0x99,0x26,0x57,0x3f,0x36,0x33,0x48,0x09,0x3f,0x62,0xcc,0x23,0xd5,
    0x4d,0x03,0x19,0xae,0x94,0xda,0x4f,0x0a,0x00,0x00,0xc5,0xe9,0x78,0xb2
};

static struct EmbedImage {
    int width, height, depth;
    const unsigned char *data;
    ulong compressed;
    int numColors;
    const QRgb *colorTable;
    bool alpha;
    const char *name;
} embed_image_vec[] = {
    { 16, 16, 1, (const unsigned char*)image_0_data, 47, 2, image_0_ctable, FALSE, "run.png" },
    { 16, 16, 1, (const unsigned char*)image_1_data, 50, 2, image_1_ctable, FALSE, "pause.png" },
    { 16, 16, 1, (const unsigned char*)image_2_data, 53, 2, image_2_ctable, FALSE, "terminate.png" },
    { 16, 16, 1, (const unsigned char*)image_3_data, 27, 2, image_3_ctable, FALSE, "interrupt.png" },
    { 16, 16, 1, (const unsigned char*)image_4_data, 49, 2, image_4_ctable, FALSE, "cont.png" },
    { 16, 16, 1, (const unsigned char*)image_5_data, 55, 2, image_5_ctable, FALSE, "update.png" },
    { 16, 16, 1, (const unsigned char*)image_6_data, 65, 2, image_6_ctable, FALSE, "detach.png" },
    { 16, 16, 1, (const unsigned char*)image_7_data, 47, 2, image_7_ctable, FALSE, "attach.png" },
    { 16, 16, 32, (const unsigned char*)image_8_data, 66, 0, 0, FALSE, "rightarrow.png" },
    { 16, 16, 32, (const unsigned char*)image_9_data, 70, 0, 0, FALSE, "leftarrow.png" },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};

static QImage uic_findImage( const QString& name )
{
    for ( int i=0; embed_image_vec[i].data; i++ ) {
	if ( QString::fromUtf8(embed_image_vec[i].name) == name ) {
	    QByteArray baunzip;
	    baunzip = qUncompress( embed_image_vec[i].data, 
		embed_image_vec[i].compressed );
	    QImage img((uchar*)baunzip.data(),
			embed_image_vec[i].width,
			embed_image_vec[i].height,
			embed_image_vec[i].depth,
			(QRgb*)embed_image_vec[i].colorTable,
			embed_image_vec[i].numColors,
			QImage::BigEndian
		);
	    img = img.copy();
	    if ( embed_image_vec[i].alpha )
		img.setAlphaBuffer(TRUE);
	    return img;
        }
    }
    return QImage();
}

class MimeSourceFactory_usertime : public QMimeSourceFactory
{
public:
    MimeSourceFactory_usertime() {}
    ~MimeSourceFactory_usertime() {}
    const QMimeSource* data( const QString& abs_name ) const {
	const QMimeSource* d = QMimeSourceFactory::data( abs_name );
	if ( d || abs_name.isNull() ) return d;
	QImage img = uic_findImage( abs_name );
	if ( !img.isNull() )
	    ((QMimeSourceFactory*)this)->setImage( abs_name, img );
	return QMimeSourceFactory::data( abs_name );
    };
};

static QMimeSourceFactory* factory = 0;

void qInitImages_usertime()
{
    if ( !factory ) {
	factory = new MimeSourceFactory_usertime;
	QMimeSourceFactory::defaultFactory()->addFactory( factory );
    }
}

void qCleanupImages_usertime()
{
    if ( factory ) {
	QMimeSourceFactory::defaultFactory()->removeFactory( factory );
	delete factory;
	factory = 0;
    }
}

class StaticInitImages_usertime
{
public:
    StaticInitImages_usertime() { qInitImages_usertime(); }
#if defined(Q_OS_SCO) || defined(Q_OS_UNIXWARE)
    ~StaticInitImages_usertime() { }
#else
    ~StaticInitImages_usertime() { qCleanupImages_usertime(); }
#endif
};

static StaticInitImages_usertime staticImages;
